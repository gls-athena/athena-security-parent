name: Branch Sync

# 工作流触发器配置
# 支持手动触发和定时触发两种方式
on:
  # 手动触发配置，允许用户选择同步方向
  workflow_dispatch:
    inputs:
      sync_direction:
        description: 'Sync direction'
        required: true
        default: 'develop-to-master'
        type: choice
        options:
          - develop-to-master
          - master-to-develop
  # 定时触发配置
  schedule:
    # 每周日凌晨 2 点自动同步 develop 到 master（如果有新提交）
    - cron: '0 2 * * 0'

# 定义工作流中的任务
jobs:
  # 分支同步任务
  sync-branches:
    # 指定运行环境为最新版 Ubuntu
    runs-on: ubuntu-latest

    # 定义任务执行步骤
    steps:
      # 检出代码步骤，获取完整的 Git 历史记录
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      # 配置 Git 用户信息，用于后续的提交操作
      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      # 同步 develop 分支到 master 分支
      # 当手动选择 develop-to-master 或者定时触发时执行
      - name: Sync develop to master
        if: github.event.inputs.sync_direction == 'develop-to-master' || github.event_name == 'schedule'
        run: |
          git checkout master
          git pull origin master
          git checkout develop
          git pull origin develop
          
          # 检查 develop 分支相对于 master 分支是否有新的提交
          COMMITS_AHEAD=$(git rev-list --count master..develop)
          echo "Commits ahead: $COMMITS_AHEAD"
          
          if [ "$COMMITS_AHEAD" -gt 0 ]; then
            echo "Syncing develop to master..."
            git checkout master
            git merge develop --no-ff -m "Auto-sync: Merge develop into master"
            git push origin master
            echo "Sync completed successfully"
          else
            echo "No new commits to sync"
          fi

      # 同步 master 分支到 develop 分支
      # 仅当手动选择 master-to-develop 时执行
      - name: Sync master to develop
        if: github.event.inputs.sync_direction == 'master-to-develop'
        run: |
          git checkout develop
          git pull origin develop
          git checkout master
          git pull origin master
          
          # 检查 master 分支相对于 develop 分支是否有新的提交
          COMMITS_AHEAD=$(git rev-list --count develop..master)
          echo "Commits ahead: $COMMITS_AHEAD"
          
          if [ "$COMMITS_AHEAD" -gt 0 ]; then
            echo "Syncing master to develop..."
            git checkout develop
            git merge master --no-ff -m "Auto-sync: Merge master into develop"
            git push origin develop
            echo "Sync completed successfully"
          else
            echo "No new commits to sync"
          fi
